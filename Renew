<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>BDT Mining App</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body class="bg-gray-900 text-white">
<div id="app" class="p-4 max-w-md mx-auto">
  <div class="text-center text-xl font-bold mb-4">BDT Mining App</div>

  <div v-if="loggedIn">
    <div class="bg-gray-800 p-4 rounded-lg mb-4">
      <div class="text-sm">Current Balance</div>
      <div class="text-2xl font-bold">{{ balance.toFixed(10) }} BDT</div>
    </div>

    <div class="bg-gray-800 p-4 rounded-lg mb-4">
      <div class="flex justify-between items-center">
        <span>Total Mining Power</span>
        <span class="font-bold">{{ miningPower }} Gh/s</span>
      </div>
      <button @click="startMining" class="mt-2 w-full bg-green-600 p-2 rounded">Start Mining</button>
    </div>

    <div class="bg-gray-800 p-4 rounded-lg mb-4">
      <div class="font-semibold mb-2">Buy Power Up</div>
      <div class="flex justify-between items-center mb-2">
        <span>5 Gh/s - 100 BDT</span>
        <button @click="buyPower(5, 100)" class="bg-blue-500 px-2 py-1 rounded">Buy</button>
      </div>
      <div class="flex justify-between items-center">
        <span>10 Gh/s - 180 BDT</span>
        <button @click="buyPower(10, 180)" class="bg-blue-500 px-2 py-1 rounded">Buy</button>
      </div>
    </div>

    <div class="bg-gray-800 p-4 rounded-lg mb-4">
      <div class="font-semibold mb-2">Withdraw</div>
      <select v-model="withdrawMethod" class="mb-2 w-full p-2 rounded text-black">
        <option value="bkash">bKash</option>
        <option value="nagad">Nagad</option>
      </select>
      <input v-model.number="withdrawAmount" type="number" placeholder="Amount (BDT)" class="w-full p-2 rounded text-black mb-2">
      <button @click="withdraw" class="w-full bg-yellow-500 p-2 rounded">Withdraw</button>
    </div>

    <div class="bg-gray-800 p-4 rounded-lg mb-4">
      <div class="font-semibold mb-2">Transaction History</div>
      <ul class="text-sm space-y-1">
        <li v-for="(tx, index) in transactions" :key="index">{{ tx }}</li>
      </ul>
    </div>
  </div>

  <div v-else class="bg-gray-700 p-4 rounded-lg">
    <input v-model="username" placeholder="Username" class="w-full p-2 rounded text-black mb-2">
    <input v-model="password" type="password" placeholder="Password" class="w-full p-2 rounded text-black mb-2">
    <button @click="login" class="w-full bg-blue-600 p-2 rounded">Login / Register</button>
  </div>
</div>

<script>
new Vue({
  el: '#app',
  data: {
    balance: 0,
    miningPower: 0,
    withdrawAmount: 0,
    withdrawMethod: 'bkash',
    loggedIn: false,
    username: '',
    password: '',
    transactions: []
  },
  methods: {
    async login() {
      try {
        const res = await axios.post('http://localhost:3000/login', {
          username: this.username,
          password: this.password
        });
        this.balance = res.data.balance;
        this.miningPower = res.data.power;
        this.transactions = res.data.transactions;
        this.loggedIn = true;
        alert(res.data.message);
      } catch (err) {
        alert(err.response.data.error);
      }
    },
    async startMining() {
      const res = await axios.post('http://localhost:3000/mine', {
        username: this.username
      });
      this.balance = res.data.balance;
      this.transactions = res.data.transactions;
    },
    async buyPower(power, cost) {
      const res = await axios.post('http://localhost:3000/buy-power', {
        username: this.username,
        power: power,
        cost: cost
      });
      this.balance = res.data.balance;
      this.miningPower = res.data.power;
      this.transactions = res.data.transactions;
    },
    async withdraw() {
      const res = await axios.post('http://localhost:3000/withdraw', {
        username: this.username,
        amount: this.withdrawAmount,
        method: this.withdrawMethod
      });
      this.balance = res.data.balance;
      this.transactions = res.data.transactions;
      this.withdrawAmount = 0;
    }
  }
});
</script>
</body>
</html>
